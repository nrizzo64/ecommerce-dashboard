name: Validate Pull Request Build

on:
  pull_request:
    branches:
      - '**' # trigger on all branches

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Docker Compose Services
        # grep -q exit status is 0 for successful, 1 for no match found
        run: |
          REQUIRED_SERVICES=("web" "mongo")
          FILE="docker-compose.yml"

          for service in "${REQUIRED_SERVICES[@]}"; do
            if ! grep -q "^\s*${service}:" $FILE; then
              echo "Service '${service}' is required, but it is missing in ${FILE}. Did you remove or rename it?"
              exit 1
            fi
          done
          echo "All required services are present in ${FILE}"

      - name: Ensure TypeScript Version Is Not Downgraded
        run: |
          FILE="package.json"
          MINIMUM_TYPESCRIPT_VERSION="5.2.2"

          # Extract TypeScript versions from dependencies and devDependencies
          DEPENDENCY_VERSION=$(grep -o '"typescript": *"[^"]*"' "$FILE" | tail -1 | awk '{print $NF}' | sed 's/"//g')
          DEV_DEPENDENCY_VERSION=$(grep -o '"typescript": *"[^"]*"' "$FILE" | tail -1 | awk '{print $NF}' | sed 's/"//g')

          normalize_version() {
            echo "$1" | grep -oE '[0-9]+(\.[0-9]+)*'
          }

          NORMALIZED_DEPENDENCY_VERSION=$(normalize_version "$DEPENDENCY_VERSION")
          NORMALIZED_DEV_DEPENDENCY_VERSION=$(normalize_version "$DEV_DEPENDENCY_VERSION")

          # If TypeScript is missing, consider it invalid
          if [ -z "$NORMALIZED_DEPENDENCY_VERSION" ] && [ -z "$NORMALIZED_DEV_DEPENDENCY_VERSION" ]; then
            echo "TypeScript is not listed in dependencies or devDependencies in $FILE!"
            exit 1
          fi

          # Compare versions if found
          if [ -n "$NORMALIZED_DEPENDENCY_VERSION" ]; then
            if dpkg --compare-versions "$NORMALIZED_DEPENDENCY_VERSION" "lt" "$MINIMUM_TYPESCRIPT_VERSION"; then
              echo "TypeScript version in dependencies is too low! Minimum required: $MINIMUM_TYPESCRIPT_VERSION, Found: $NORMALIZED_DEPENDENCY_VERSION"
              exit 1
            fi
          fi

          if [ -n "$NORMALIZED_DEV_DEPENDENCY_VERSION" ]; then
            if dpkg --compare-versions "$NORMALIZED_DEV_DEPENDENCY_VERSION" "lt" "$MINIMUM_TYPESCRIPT_VERSION"; then
              echo "TypeScript version in devDependencies is too low! Minimum required: $MINIMUM_TYPESCRIPT_VERSION, Found: $NORMALIZED_DEV_DEPENDENCY_VERSION"
              exit 1
            fi
          fi

          echo "TypeScript version in dependencies and devDependencies meets the minimum requirement of $MINIMUM_TYPESCRIPT_VERSION."

      - name: Ensure nginx is not a service
        run: |
          FILE="docker-compose.yml"

          if grep -q "^[[:space:]]*nginx:" "$FILE"; then
            echo "Please remove 'nginx' from $FILE as it interferes with our service communication."
            exit 1
          fi

          echo "The service 'nginx' is not used in $FILE."

      - name: Build Docker Compose services
        run: docker compose build
